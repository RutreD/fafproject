#include "main.hpp"

namespace D3D9Vtbl
{
struct D3D9Vtable
{
    D3D9Vtable() {
        ImGui::Hook::OnInitialize += []() {
            auto vtbl = ImGui::Hook::D3D9::GetVirtualTable();
            std::cout << std::hex;
            std::cout << "D3D9Device functions:" << std::endl;
            std::cout << "D3D9Device pointer:" << " 0x" << ImGui::Hook::D3D9::Device << std::endl;
            std::cout << "QueryInterface" << " 0x" << vtbl[0] << std::endl;
            std::cout << "AddRef" << " 0x" << vtbl[1] << std::endl;
            std::cout << "Release" << " 0x" << vtbl[2] << std::endl;
            std::cout << "TestCooperativeLevel" << " 0x" << vtbl[3] << std::endl;
            std::cout << "GetAvailableTextureMem" << " 0x" << vtbl[4] << std::endl;
            std::cout << "EvictManagedResources" << " 0x" << vtbl[5] << std::endl;
            std::cout << "GetDirect3D" << " 0x" << vtbl[6] << std::endl;
            std::cout << "GetDeviceCaps" << " 0x" << vtbl[7] << std::endl;
            std::cout << "GetDisplayMode" << " 0x" << vtbl[8] << std::endl;
            std::cout << "GetCreationParameters" << " 0x" << vtbl[9] << std::endl;
            std::cout << "SetCursorProperties" << " 0x" << vtbl[10] << std::endl;
            std::cout << "SetCursorPosition" << " 0x" << vtbl[11] << std::endl;
            std::cout << "ShowCursor" << " 0x" << vtbl[12] << std::endl;
            std::cout << "CreateAdditionalSwapChain" << " 0x" << vtbl[13] << std::endl;
            std::cout << "GetSwapChain" << " 0x" << vtbl[14] << std::endl;
            std::cout << "GetNumberOfSwapChains" << " 0x" << vtbl[15] << std::endl;
            std::cout << "Reset" << " 0x" << vtbl[16] << std::endl;
            std::cout << "Present" << " 0x" << vtbl[17] << std::endl;
            std::cout << "GetBackBuffer" << " 0x" << vtbl[18] << std::endl;
            std::cout << "GetRasterStatus" << " 0x" << vtbl[19] << std::endl;
            std::cout << "SetDialogBoxMode" << " 0x" << vtbl[20] << std::endl;
            std::cout << "SetGammaRamp" << " 0x" << vtbl[21] << std::endl;
            std::cout << "GetGammaRamp" << " 0x" << vtbl[22] << std::endl;
            std::cout << "CreateTexture" << " 0x" << vtbl[23] << std::endl;
            std::cout << "CreateVolumeTexture" << " 0x" << vtbl[24] << std::endl;
            std::cout << "CreateCubeTexture" << " 0x" << vtbl[25] << std::endl;
            std::cout << "CreateVertexBuffer" << " 0x" << vtbl[26] << std::endl;
            std::cout << "CreateIndexBuffer" << " 0x" << vtbl[27] << std::endl;
            std::cout << "CreateRenderTarget" << " 0x" << vtbl[28] << std::endl;
            std::cout << "CreateDepthStencilSurface" << " 0x" << vtbl[29] << std::endl;
            std::cout << "UpdateSurface" << " 0x" << vtbl[30] << std::endl;
            std::cout << "UpdateTexture" << " 0x" << vtbl[31] << std::endl;
            std::cout << "GetRenderTargetData" << " 0x" << vtbl[32] << std::endl;
            std::cout << "GetFrontBufferData" << " 0x" << vtbl[33] << std::endl;
            std::cout << "StretchRect" << " 0x" << vtbl[34] << std::endl;
            std::cout << "ColorFill" << " 0x" << vtbl[35] << std::endl;
            std::cout << "CreateOffscreenPlainSurface" << " 0x" << vtbl[36] << std::endl;
            std::cout << "SetRenderTarget" << " 0x" << vtbl[37] << std::endl;
            std::cout << "GetRenderTarget" << " 0x" << vtbl[38] << std::endl;
            std::cout << "SetDepthStencilSurface" << " 0x" << vtbl[39] << std::endl;
            std::cout << "GetDepthStencilSurface" << " 0x" << vtbl[40] << std::endl;
            std::cout << "BeginScene" << " 0x" << vtbl[41] << std::endl;
            std::cout << "EndScene" << " 0x" << vtbl[42] << std::endl;
            std::cout << "Clear" << " 0x" << vtbl[43] << std::endl;
            std::cout << "SetTransform" << " 0x" << vtbl[44] << std::endl;
            std::cout << "GetTransform" << " 0x" << vtbl[45] << std::endl;
            std::cout << "MultiplyTransform" << " 0x" << vtbl[46] << std::endl;
            std::cout << "SetViewport" << " 0x" << vtbl[47] << std::endl;
            std::cout << "GetViewport" << " 0x" << vtbl[48] << std::endl;
            std::cout << "SetMaterial" << " 0x" << vtbl[49] << std::endl;
            std::cout << "GetMaterial" << " 0x" << vtbl[50] << std::endl;
            std::cout << "SetLight" << " 0x" << vtbl[51] << std::endl;
            std::cout << "GetLight" << " 0x" << vtbl[52] << std::endl;
            std::cout << "LightEnable" << " 0x" << vtbl[53] << std::endl;
            std::cout << "GetLightEnable" << " 0x" << vtbl[54] << std::endl;
            std::cout << "SetClipPlane" << " 0x" << vtbl[55] << std::endl;
            std::cout << "GetClipPlane" << " 0x" << vtbl[56] << std::endl;
            std::cout << "SetRenderState" << " 0x" << vtbl[57] << std::endl;
            std::cout << "GetRenderState" << " 0x" << vtbl[58] << std::endl;
            std::cout << "CreateStateBlock" << " 0x" << vtbl[59] << std::endl;
            std::cout << "BeginStateBlock" << " 0x" << vtbl[60] << std::endl;
            std::cout << "EndStateBlock" << " 0x" << vtbl[61] << std::endl;
            std::cout << "SetClipStatus" << " 0x" << vtbl[62] << std::endl;
            std::cout << "GetClipStatus" << " 0x" << vtbl[63] << std::endl;
            std::cout << "GetTexture" << " 0x" << vtbl[64] << std::endl;
            std::cout << "SetTexture" << " 0x" << vtbl[65] << std::endl;
            std::cout << "GetTextureStageState" << " 0x" << vtbl[66] << std::endl;
            std::cout << "SetTextureStageState" << " 0x" << vtbl[67] << std::endl;
            std::cout << "GetSamplerState" << " 0x" << vtbl[68] << std::endl;
            std::cout << "SetSamplerState" << " 0x" << vtbl[69] << std::endl;
            std::cout << "ValidateDevice" << " 0x" << vtbl[70] << std::endl;
            std::cout << "SetPaletteEntries" << " 0x" << vtbl[71] << std::endl;
            std::cout << "GetPaletteEntries" << " 0x" << vtbl[72] << std::endl;
            std::cout << "SetCurrentTexturePalette" << " 0x" << vtbl[73] << std::endl;
            std::cout << "GetCurrentTexturePalette" << " 0x" << vtbl[74] << std::endl;
            std::cout << "SetScissorRect" << " 0x" << vtbl[75] << std::endl;
            std::cout << "GetScissorRect" << " 0x" << vtbl[76] << std::endl;
            std::cout << "SetSoftwareVertexProcessing" << " 0x" << vtbl[77] << std::endl;
            std::cout << "GetSoftwareVertexProcessing" << " 0x" << vtbl[78] << std::endl;
            std::cout << "SetNPatchMode" << " 0x" << vtbl[79] << std::endl;
            std::cout << "GetNPatchMode" << " 0x" << vtbl[80] << std::endl;
            std::cout << "DrawPrimitive" << " 0x" << vtbl[81] << std::endl;
            std::cout << "DrawIndexedPrimitive" << " 0x" << vtbl[82] << std::endl;
            std::cout << "DrawPrimitiveUP" << " 0x" << vtbl[83] << std::endl;
            std::cout << "DrawIndexedPrimitiveUP" << " 0x" << vtbl[84] << std::endl;
            std::cout << "ProcessVertices" << " 0x" << vtbl[85] << std::endl;
            std::cout << "CreateVertexDeclaration" << " 0x" << vtbl[86] << std::endl;
            std::cout << "SetVertexDeclaration" << " 0x" << vtbl[87] << std::endl;
            std::cout << "GetVertexDeclaration" << " 0x" << vtbl[88] << std::endl;
            std::cout << "SetFVF" << " 0x" << vtbl[89] << std::endl;
            std::cout << "GetFVF" << " 0x" << vtbl[90] << std::endl;
            std::cout << "CreateVertexShader" << " 0x" << vtbl[91] << std::endl;
            std::cout << "SetVertexShader" << " 0x" << vtbl[92] << std::endl;
            std::cout << "GetVertexShader" << " 0x" << vtbl[93] << std::endl;
            std::cout << "SetVertexShaderConstantF" << " 0x" << vtbl[94] << std::endl;
            std::cout << "GetVertexShaderConstantF" << " 0x" << vtbl[95] << std::endl;
            std::cout << "SetVertexShaderConstantI" << " 0x" << vtbl[96] << std::endl;
            std::cout << "GetVertexShaderConstantI" << " 0x" << vtbl[97] << std::endl;
            std::cout << "SetVertexShaderConstantB" << " 0x" << vtbl[98] << std::endl;
            std::cout << "GetVertexShaderConstantB" << " 0x" << vtbl[99] << std::endl;
            std::cout << "SetStreamSource" << " 0x" << vtbl[100] << std::endl;
            std::cout << "GetStreamSource" << " 0x" << vtbl[101] << std::endl;
            std::cout << "SetStreamSourceFreq" << " 0x" << vtbl[102] << std::endl;
            std::cout << "GetStreamSourceFreq" << " 0x" << vtbl[103] << std::endl;
            std::cout << "SetIndices" << " 0x" << vtbl[104] << std::endl;
            std::cout << "GetIndices" << " 0x" << vtbl[105] << std::endl;
            std::cout << "CreatePixelShader" << " 0x" << vtbl[106] << std::endl;
            std::cout << "SetPixelShader" << " 0x" << vtbl[107] << std::endl;
            std::cout << "GetPixelShader" << " 0x" << vtbl[108] << std::endl;
            std::cout << "SetPixelShaderConstantF" << " 0x" << vtbl[109] << std::endl;
            std::cout << "GetPixelShaderConstantF" << " 0x" << vtbl[110] << std::endl;
            std::cout << "SetPixelShaderConstantI" << " 0x" << vtbl[111] << std::endl;
            std::cout << "GetPixelShaderConstantI" << " 0x" << vtbl[112] << std::endl;
            std::cout << "SetPixelShaderConstantB" << " 0x" << vtbl[113] << std::endl;
            std::cout << "GetPixelShaderConstantB" << " 0x" << vtbl[114] << std::endl;
            std::cout << "DrawRectPatch" << " 0x" << vtbl[115] << std::endl;
            std::cout << "DrawTriPatch" << " 0x" << vtbl[116] << std::endl;
            std::cout << "DeletePatch" << " 0x" << vtbl[117] << std::endl;
            std::cout << "CreateQuery" << " 0x" << vtbl[118] << std::endl;
            std::cout << std::dec;
        };
    }
    ~D3D9Vtable() {}
} /* D3D9Vtbl */;
}